{"ast":null,"code":"import React from 'react';\nimport { List, Button, Card } from 'antd';\nimport { StopOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FollowList = function FollowList(_ref) {\n  var header = _ref.header,\n      data = _ref.data,\n      onClickMore = _ref.onClickMore,\n      loading = _ref.loading,\n      mutateFollowing = _ref.mutateFollowing,\n      mutateFollower = _ref.mutateFollower;\n  var dispatch = useDispatch(); //반복문안에 onClick같은것 있으면 반복문에 대한 데이터 넘겨주고 고차함수사용해서 받기\n  //즉, item에한 정보를 함수로 보내고싶어서 사용했다.\n\n  var onCancel = function onCancel(id) {\n    return function () {\n      if (header === '팔로잉') {\n        dispatch({\n          type: UNFOLLOW_REQUEST,\n          data: id\n        });\n        mutateFollowing(function (prev) {\n          return prev.filter(function (data) {\n            return data.id !== id;\n          });\n        });\n      } else {\n        dispatch({\n          type: REMOVE_FOLLOWER_REQUEST,\n          data: id\n        });\n        mutateFollower(function (prev) {\n          return prev.filter(function (data) {\n            return data.id !== id;\n          });\n        });\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsx(List, {\n    style: {\n      marginBottom: 20\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: /*#__PURE__*/_jsx(\"div\", {\n      children: header\n    }),\n    loadMore: /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      children: /*#__PURE__*/_jsx(Button, {\n        onClick: onClickMore,\n        loading: loading,\n        children: \"\\uB354 \\uBCF4\\uAE30\"\n      })\n    }),\n    bordered: true,\n    dataSource: data,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/_jsx(List.Item, {\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsx(Card, {\n          actions: [/*#__PURE__*/_jsx(StopOutlined, {\n            onClick: onCancel(item.id)\n          }, \"stop\")],\n          children: /*#__PURE__*/_jsx(Card.Meta, {\n            description: item.nickname\n          })\n        })\n      });\n    }\n  });\n};\n\nexport default FollowList;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/components/FollowList.js"],"names":["React","List","Button","Card","StopOutlined","useDispatch","UNFOLLOW_REQUEST","REMOVE_FOLLOWER_REQUEST","FollowList","header","data","onClickMore","loading","mutateFollowing","mutateFollower","dispatch","onCancel","id","type","prev","filter","marginBottom","gutter","xs","md","textAlign","margin","item","marginTop","nickname"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,QAAiC,MAAjC;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,kBAA1D;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA2E;AAAA,MAAzEC,MAAyE,QAAzEA,MAAyE;AAAA,MAAjEC,IAAiE,QAAjEA,IAAiE;AAAA,MAA3DC,WAA2D,QAA3DA,WAA2D;AAAA,MAA9CC,OAA8C,QAA9CA,OAA8C;AAAA,MAArCC,eAAqC,QAArCA,eAAqC;AAAA,MAApBC,cAAoB,QAApBA,cAAoB;AAC1F,MAAMC,QAAQ,GAAGV,WAAW,EAA5B,CAD0F,CAE1F;AACA;;AACA,MAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD;AAAA,WAAQ,YAAM;AAC3B,UAAGR,MAAM,KAAK,KAAd,EAAoB;AAChBM,QAAAA,QAAQ,CAAC;AACLG,UAAAA,IAAI,EAAEZ,gBADD;AAELI,UAAAA,IAAI,EAAEO;AAFD,SAAD,CAAR;AAIAJ,QAAAA,eAAe,CAAC,UAACM,IAAD;AAAA,iBAAUA,IAAI,CAACC,MAAL,CAAY,UAACV,IAAD;AAAA,mBAAUA,IAAI,CAACO,EAAL,KAAYA,EAAtB;AAAA,WAAZ,CAAV;AAAA,SAAD,CAAf;AACH,OAND,MAMM;AACFF,QAAAA,QAAQ,CAAC;AACLG,UAAAA,IAAI,EAAEX,uBADD;AAELG,UAAAA,IAAI,EAAEO;AAFD,SAAD,CAAR;AAIAH,QAAAA,cAAc,CAAC,UAACK,IAAD;AAAA,iBAAUA,IAAI,CAACC,MAAL,CAAY,UAACV,IAAD;AAAA,mBAAUA,IAAI,CAACO,EAAL,KAAYA,EAAtB;AAAA,WAAZ,CAAV;AAAA,SAAD,CAAd;AACH;AAEJ,KAfgB;AAAA,GAAjB;;AAiBA,sBACI,KAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACI,MAAAA,YAAY,EAAC;AAAd,KADX;AAEI,IAAA,IAAI,EAAE;AAACC,MAAAA,MAAM,EAAE,CAAT;AAAYC,MAAAA,EAAE,EAAE,CAAhB;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,eAAE;AAAA,gBAAMf;AAAN,MAJZ;AAKI,IAAA,QAAQ,eACR;AAAK,MAAA,KAAK,EAAE;AAACgB,QAAAA,SAAS,EAAC,QAAX;AAAqBC,QAAAA,MAAM,EAAC;AAA5B,OAAZ;AAAA,6BACI,KAAC,MAAD;AAAQ,QAAA,OAAO,EAAEf,WAAjB;AAA8B,QAAA,OAAO,EAAEC,OAAvC;AAAA;AAAA;AADJ,MANJ;AAUI,IAAA,QAAQ,MAVZ;AAWI,IAAA,UAAU,EAAEF,IAXhB;AAYI,IAAA,UAAU,EAAE,oBAACiB,IAAD;AAAA,0BACR,KAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAlB;AAAA,+BACI,KAAC,IAAD;AAAM,UAAA,OAAO,EAAE,cAAC,KAAC,YAAD;AAAyB,YAAA,OAAO,EAAEZ,QAAQ,CAACW,IAAI,CAACV,EAAN;AAA1C,aAAkB,MAAlB,CAAD,CAAf;AAAA,iCACI,KAAC,IAAD,CAAM,IAAN;AAAW,YAAA,WAAW,EAAEU,IAAI,CAACE;AAA7B;AADJ;AADJ,QADQ;AAAA;AAZhB,IADJ;AAuBH,CA5CD;;AAqDA,eAAerB,UAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {List, Button, Card} from 'antd';\r\nimport {StopOutlined} from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\r\n\r\nconst FollowList = ({header, data, onClickMore, loading, mutateFollowing, mutateFollower}) => {\r\n    const dispatch = useDispatch();\r\n    //반복문안에 onClick같은것 있으면 반복문에 대한 데이터 넘겨주고 고차함수사용해서 받기\r\n    //즉, item에한 정보를 함수로 보내고싶어서 사용했다.\r\n    const onCancel = (id) => () => {\r\n        if(header === '팔로잉'){\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: id,\r\n            });\r\n            mutateFollowing((prev) => prev.filter((data) => data.id !== id));\r\n        } else{\r\n            dispatch({\r\n                type: REMOVE_FOLLOWER_REQUEST,\r\n                data: id,\r\n            });\r\n            mutateFollower((prev) => prev.filter((data) => data.id !== id));\r\n        }\r\n\r\n    };\r\n\r\n    return(\r\n        <List \r\n            style={{marginBottom:20}}\r\n            grid={{gutter: 4, xs: 2, md: 3}}\r\n            size=\"small\"\r\n            header={<div>{header}</div>}\r\n            loadMore={(\r\n            <div style={{textAlign:'center', margin:'10px 0'}}>\r\n                <Button onClick={onClickMore} loading={loading}>더 보기</Button>\r\n            </div>\r\n                )}\r\n            bordered\r\n            dataSource={data}\r\n            renderItem={(item) => (\r\n                <List.Item style={{marginTop:20}}>\r\n                    <Card actions={[<StopOutlined key=\"stop\" onClick={onCancel(item.id)} />]}>\r\n                        <Card.Meta description={item.nickname} />\r\n                    </Card>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nFollowList.propTypes = {\r\n    header:PropTypes.string.isRequired,\r\n    data:PropTypes.array.isRequired,\r\n    onClickMore:PropTypes.func.isRequired,\r\n    loading:PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FollowList;"]},"metadata":{},"sourceType":"module"}
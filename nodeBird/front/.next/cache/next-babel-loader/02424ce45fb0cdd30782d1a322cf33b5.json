{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware([...middlewares])) : composeWithDevTools(applyMiddleware([...middlewares]));\n  const store = createStore(reducer, [enhancer]);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: '이현호'\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACfL,OAAO,CAACF,eAAe,CAAC,CAAC,GAAGM,WAAJ,CAAD,CAAhB,CADQ,GAEfH,mBAAmB,CAACH,eAAe,CAAC,CAAC,GAAGM,WAAJ,CAAD,CAAhB,CAFrB;AAIA,QAAME,KAAK,GAAGP,WAAW,CAACG,OAAD,EAAU,CAACG,QAAD,CAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAE,iBADK;AAEXC,IAAAA,IAAI,EAAE;AAFK,GAAf;AAIA,SAAOH,KAAP;AACH,CAZD;;AAcA,MAAMI,OAAO,GAAGb,aAAa,CAACM,cAAD,EACzB;AAACQ,EAAAA,KAAK;AAAN,CADyB,CAA7B;AAGA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {applyMiddleware, createStore, compose} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware([...middlewares])) \r\n    : composeWithDevTools(applyMiddleware([...middlewares]))\r\n\r\n    const store = createStore(reducer, [enhancer]);\r\n    store.dispatch({\r\n        type: 'CHANGE_NICKNAME',\r\n        data: '이현호',\r\n    })\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, \r\n    {debug:process.env.NODE_ENV === 'development'});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}
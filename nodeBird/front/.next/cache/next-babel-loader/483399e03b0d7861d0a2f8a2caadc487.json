{"ast":null,"code":"import React from 'react';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post); // if(router.isFallback){\n  //     return <div>로딩중..</div>;\n  // }\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n}; // export async function getStaticPaths(){\n//     return{\n//         paths:[\n//             {params:{id:'4'}},\n//         ],\n//         fallback: true,\n//     }\n// }\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/post/[id].js"],"names":["React","useRouter","END","axios","useSelector","Head","wrapper","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","AppLayout","PostCard","Post","router","id","query","singlePost","state","post","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAACY,IAAAA;AAAD,MAAOD,MAAM,CAACE,KAApB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAeX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC,CAHe,CAKf;AACA;AACA;;AAEA,sBACI,MAAC,SAAD;AAAA,4BACI,MAAC,IAAD;AAAA,8BACI;AAAA,mBAAQF,UAAU,CAACG,IAAX,CAAgBC,QAAxB;AAAA,QADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEJ,UAAU,CAACK;AAA7C,QAFJ,eAGI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAG,GAAEL,UAAU,CAACG,IAAX,CAAgBC,QAAS;AAA/D,QAHJ,eAII;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAEJ,UAAU,CAACK;AAApD,QAJJ,eAKI;AAAM,QAAA,QAAQ,EAAC,UAAf;AACA,QAAA,OAAO,EAAEL,UAAU,CAACM,MAAX,CAAkB,CAAlB,IAAuBN,UAAU,CAACM,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAiD;AAD1D,QALJ,eAOI;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAG,6BAA4BT,EAAG;AAAjE,QAPJ;AAAA,MADJ,eAUI,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEE;AAAhB,MAVJ;AAAA,IADJ;AAeH,CAxBD,C,CA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMQ,kBAAkB,GAAGjB,OAAO,CAACiB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAtB,EAAAA,KAAK,CAACyB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAGL,OAAO,CAACE,GAAR,IAAeD,MAAlB,EAAyB;AACrBtB,IAAAA,KAAK,CAACyB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AAEDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAExB;AADa,GAAvB;AAIAgB,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEzB,iBADa;AAEnB0B,IAAAA,IAAI,EAAET,OAAO,CAACU,MAAR,CAAerB;AAFF,GAAvB;AAKAW,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB7B,GAAvB;AACA,QAAMsB,OAAO,CAACM,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAlBiC,CAA3B;AAoBP,eAAezB,IAAf","sourcesContent":["import React from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    const {id} = router.query;\r\n    const {singlePost} = useSelector((state) => state.post);\r\n\r\n    // if(router.isFallback){\r\n    //     return <div>로딩중..</div>;\r\n    // }\r\n\r\n    return(\r\n        <AppLayout>\r\n            <Head>\r\n                <title>{singlePost.User.nickname}님의 글</title>\r\n                <meta name=\"description\" content={singlePost.content} />\r\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={singlePost.content} />\r\n                <meta property=\"og:image\" \r\n                content={singlePost.Images[0] ? singlePost.Images[0].src :'https://nodebird.com/favicon.ico'} />\r\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            </Head>\r\n            <PostCard post={singlePost} />\r\n        </AppLayout>\r\n        \r\n    )\r\n}\r\n\r\n// export async function getStaticPaths(){\r\n//     return{\r\n//         paths:[\r\n//             {params:{id:'4'}},\r\n//         ],\r\n//         fallback: true,\r\n//     }\r\n// }\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}
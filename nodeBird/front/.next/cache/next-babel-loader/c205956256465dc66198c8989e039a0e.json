{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\cmder\\\\projects\\\\nodebird\\\\front\\\\pages\\\\profile.js\";\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../components/AppLayout';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport wrapper from '../store/configureStore';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST\n    });\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST\n    });\n  }, []); //접근제어(로그인 없이 프로필 못들어감)\n\n  useEffect(() => {\n    //로그아웃하는 경우\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return null;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789\",\n        data: me.Followings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC\",\n        data: me.Followers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/profile.js"],"names":["React","useEffect","Head","Router","useDispatch","useSelector","END","axios","AppLayout","NicknameEditForm","FollowList","wrapper","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_MY_INFO_REQUEST","Profile","dispatch","me","state","user","type","id","push","Followings","Followers","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,sBAAR,EAAgCC,uBAAhC,EAAyDC,oBAAzD,QAAoF,kBAApF;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAACa,IAAAA;AAAD,MAAOZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAGAI,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGH,GAPQ,EAON,EAPM,CAAT,CAJkB,CAalB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAG,EAAEgB,EAAE,IAAIA,EAAE,CAACI,EAAX,CAAH,EAAkB;AACdlB,MAAAA,MAAM,CAACmB,IAAP,CAAY,GAAZ;AACH;AACJ,GALQ,EAKP,CAACL,EAAE,IAAIA,EAAE,CAACI,EAAV,CALO,CAAT;;AAMA,MAAG,CAACJ,EAAJ,EAAO;AACH,WAAO,IAAP;AACH;;AAAA;AAED,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,oBAAnB;AAAyB,QAAA,IAAI,EAAEA,EAAE,CAACM;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,oBAAnB;AAAyB,QAAA,IAAI,EAAEN,EAAE,CAACO;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAYH,CApCD;;AAsCA,OAAO,MAAMC,kBAAkB,GAAGd,OAAO,CAACc,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACApB,EAAAA,KAAK,CAACuB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAGL,OAAO,CAACE,GAAR,IAAeD,MAAlB,EAAyB;AACrBpB,IAAAA,KAAK,CAACuB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAchB,QAAd,CAAuB;AACnBI,IAAAA,IAAI,EAAEN;AADa,GAAvB;AAGAY,EAAAA,OAAO,CAACM,KAAR,CAAchB,QAAd,CAAuBV,GAAvB;AACA,QAAMoB,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAXiC,CAA3B;AAaP,eAAenB,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport FollowList from '../components/FollowList';\r\nimport wrapper from '../store/configureStore';\r\nimport {LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST} from '../reducers/user'\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const {me} = useSelector((state) => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWERS_REQUEST,\r\n        });\r\n        dispatch({\r\n            type: LOAD_FOLLOWINGS_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    //접근제어(로그인 없이 프로필 못들어감)\r\n    useEffect(() => {\r\n        //로그아웃하는 경우\r\n        if(!(me && me.id)){\r\n            Router.push('/');\r\n        }\r\n    },[me && me.id]);\r\n    if(!me){\r\n        return null;\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Head>\r\n                <title>내 프로필 | NodeBird</title>\r\n            </Head>\r\n            <AppLayout>\r\n                <NicknameEditForm />\r\n                <FollowList header=\"팔로잉\" data={me.Followings} />\r\n                <FollowList header=\"팔로워\" data={me.Followers} />\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/folow');\n}\n\nfunction* follow(action) {\n  try {\n    //서버를 구현하기 전까지 delay로 비동기적인 효과 주자.\n    yield delay(1000); //const result = yield call(followAPI);\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    //서버를 구현하기 전까지 delay로 비동기적인 효과 주자.\n    yield delay(1000); //const result = yield call(unfollowAPI);\n\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/sagas/user.js"],"names":["all","fork","call","put","takeLatest","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","changeNicknameAPI","data","patch","nickname","changeNickname","action","result","type","err","error","response","loadUserAPI","get","loadUser","followAPI","post","follow","unfollowAPI","unfollow","logInAPI","logIn","logOutAPI","logOut","signUpAPI","signUp","watchChangeNickname","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,UAA9B,EAA0CC,KAA1C,QAAsD,oBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,cADJ,EACoBC,cADpB,EACoCC,cADpC,EAEIC,eAFJ,EAEqBC,eAFrB,EAEsCC,eAFtC,EAGIC,eAHJ,EAGqBC,eAHrB,EAGsCC,eAHtC,EAIIC,cAJJ,EAIoBC,cAJpB,EAIoCC,cAJpC,EAKIC,gBALJ,EAKsBC,gBALtB,EAKwCC,gBALxC,EAMIC,oBANJ,EAM0BC,oBAN1B,EAMgDC,oBANhD,EAOIC,uBAPJ,EAO6BC,uBAP7B,EAOsDC,uBAPtD,QAQO,kBARP;;AAUA,SAASC,iBAAT,CAA2BC,IAA3B,EAAgC;AAC5B,SAAOvB,KAAK,CAACwB,KAAN,CAAY,gBAAZ,EAA8B;AAACC,IAAAA,QAAQ,EAAEF;AAAX,GAA9B,CAAP;AACH;;AAED,UAAUG,cAAV,CAAyBC,MAAzB,EAAiC;AAC7B,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAAC0B,iBAAD,EAAoBK,MAAM,CAACJ,IAA3B,CAAzB;AACA,UAAM1B,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAET,uBADA;AAENG,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAMO,GAAN,EAAU;AACR,UAAMjC,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAER,uBADA;AAENU,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASU,WAAT,GAAsB;AAClB,SAAOjC,KAAK,CAACkC,GAAN,CAAU,OAAV,CAAP;AACH;;AAED,UAAUC,QAAV,CAAmBR,MAAnB,EAA2B;AACvB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAACqC,WAAD,EAAcN,MAAM,CAACJ,IAArB,CAAzB;AACA,UAAM1B,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAEZ,oBADA;AAENM,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAMO,GAAN,EAAU;AACR,UAAMjC,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAEX,oBADA;AAENa,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASa,SAAT,GAAoB;AAChB,SAAOpC,KAAK,CAACqC,IAAN,CAAW,YAAX,CAAP;AACH;;AAED,UAAUC,MAAV,CAAiBX,MAAjB,EAAyB;AACrB,MAAG;AACC;AACA,UAAM5B,KAAK,CAAC,IAAD,CAAX,CAFD,CAGC;;AACA,UAAMF,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAElB,cADA;AAENY,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAMO,GAAN,EAAU;AACR,UAAMjC,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAEjB,cADA;AAENmB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASgB,WAAT,GAAsB;AAClB,SAAOvC,KAAK,CAACqC,IAAN,CAAW,eAAX,CAAP;AACH;;AAED,UAAUG,QAAV,CAAmBb,MAAnB,EAA2B;AACvB,MAAG;AACC;AACA,UAAM5B,KAAK,CAAC,IAAD,CAAX,CAFD,CAGC;;AACA,UAAMF,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAEf,gBADA;AAENS,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAMO,GAAN,EAAU;AACR,UAAMjC,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAEd,gBADA;AAENgB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASkB,QAAT,CAAkBlB,IAAlB,EAAuB;AACnB,SAAOvB,KAAK,CAACqC,IAAN,CAAW,aAAX,EAA0Bd,IAA1B,CAAP;AACH;;AAED,UAAUmB,KAAV,CAAgBf,MAAhB,EAAwB;AACpB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAAC6C,QAAD,EAAWd,MAAM,CAACJ,IAAlB,CAAzB;AACA,UAAM1B,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAE3B,cADA;AAENqB,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAMO,GAAN,EAAU;AACR,UAAMjC,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAE1B,cADA;AAEN4B,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASoB,SAAT,GAAoB;AAChB,SAAO3C,KAAK,CAACqC,IAAN,CAAW,cAAX,CAAP;AACH;;AAED,UAAUO,MAAV,GAAmB;AACf,MAAG;AACC,UAAMhD,IAAI,CAAC+C,SAAD,CAAV;AACA,UAAM9C,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAExB;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMyB,GAAN,EAAU;AACR,UAAMjC,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAEvB,eADA;AAENyB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASsB,SAAT,CAAmBtB,IAAnB,EAAwB;AACpB,SAAOvB,KAAK,CAACqC,IAAN,CAAW,OAAX,EAAoBd,IAApB,CAAP;AACH;;AAED,UAAUuB,MAAV,CAAiBnB,MAAjB,EAAyB;AACrB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAACiD,SAAD,EAAYlB,MAAM,CAACJ,IAAnB,CAAzB;AACA,UAAM1B,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAErB;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMsB,GAAN,EAAU;AACR,UAAMjC,GAAG,CAAC;AACNgC,MAAAA,IAAI,EAAEpB,eADA;AAENsB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUwB,mBAAV,GAA+B;AAC3B,QAAMjD,UAAU,CAACqB,uBAAD,EAA0BO,cAA1B,CAAhB;AACH;;AAED,UAAUsB,aAAV,GAAyB;AACrB,QAAMlD,UAAU,CAACkB,oBAAD,EAAuBmB,QAAvB,CAAhB;AACH;;AAED,UAAUc,WAAV,GAAuB;AACnB,QAAMnD,UAAU,CAACY,cAAD,EAAiB4B,MAAjB,CAAhB;AACH;;AAED,UAAUY,aAAV,GAAyB;AACrB,QAAMpD,UAAU,CAACe,gBAAD,EAAmB2B,QAAnB,CAAhB;AACH;;AAED,UAAUW,UAAV,GAAsB;AAClB,QAAMrD,UAAU,CAACG,cAAD,EAAiByC,KAAjB,CAAhB;AACH;;AAED,UAAUU,WAAV,GAAuB;AACnB,QAAMtD,UAAU,CAACM,eAAD,EAAkBwC,MAAlB,CAAhB;AACH;;AAED,UAAUS,WAAV,GAAuB;AACnB,QAAMvD,UAAU,CAACS,eAAD,EAAkBuC,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAChC,QAAM5D,GAAG,CAAC,CACNC,IAAI,CAACoD,mBAAD,CADE,EAENpD,IAAI,CAACqD,aAAD,CAFE,EAGNrD,IAAI,CAACsD,WAAD,CAHE,EAINtD,IAAI,CAACuD,aAAD,CAJE,EAKNvD,IAAI,CAACwD,UAAD,CALE,EAMNxD,IAAI,CAACyD,WAAD,CANE,EAONzD,IAAI,CAAC0D,WAAD,CAPE,CAAD,CAAT;AASH","sourcesContent":["import {all, fork, call, put, takeLatest, delay} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n    LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE,\r\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE\r\n} from '../reducers/user';\r\n\r\nfunction changeNicknameAPI(data){\r\n    return axios.patch('/user/nickname', {nickname: data});\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try{\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadUserAPI(){\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try{\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI(){\r\n    return axios.post('/api/folow');\r\n}\r\n\r\nfunction* follow(action) {\r\n    try{\r\n        //서버를 구현하기 전까지 delay로 비동기적인 효과 주자.\r\n        yield delay(1000);\r\n        //const result = yield call(followAPI);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(){\r\n    return axios.post('/api/unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try{\r\n        //서버를 구현하기 전까지 delay로 비동기적인 효과 주자.\r\n        yield delay(1000);\r\n        //const result = yield call(unfollowAPI);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logInAPI(data){\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try{\r\n        const result = yield call(logInAPI, action.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data){\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        const result = yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchChangeNickname(){\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadUser(){\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow(){\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow(){\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn(){\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut(){\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadUser),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}
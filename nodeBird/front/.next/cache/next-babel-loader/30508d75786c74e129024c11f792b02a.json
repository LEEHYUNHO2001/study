{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Head from 'next/head';\nimport { Avatar, Card } from 'antd';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar User = function User() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, id, mainPosts.length, loadPostsLoading]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [userInfo && /*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:image\",\n        content: \"https://nodebird.com/favicon.ico\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:url\",\n        content: \"https://nodebird.com/post/\".concat(id)\n      })]\n    }), userInfo ? /*#__PURE__*/_jsx(Card, {\n      actions: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uC9F9\\uC9F9 \", /*#__PURE__*/_jsx(\"br\", {}), \" \", userInfo.Posts]\n      }, \"twit\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789 \", /*#__PURE__*/_jsx(\"br\", {}), \" \", userInfo.Followings]\n      }, \"following\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC \", /*#__PURE__*/_jsx(\"br\", {}), \" \", userInfo.Followers]\n      }, \"follower\")],\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        avatar: /*#__PURE__*/_jsx(Avatar, {\n          children: userInfo.nickname[0]\n        }),\n        title: userInfo.nickname\n      })\n    }) : null, mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsx(PostCard, {\n        post: c\n      }, c.id);\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default User;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/user/[id].js"],"names":["React","useEffect","useRouter","useSelector","useDispatch","Head","Avatar","Card","LOAD_USER_POSTS_REQUEST","AppLayout","PostCard","User","dispatch","router","id","query","state","post","mainPosts","hasMorePost","loadPostsLoading","user","userInfo","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","c"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport {Avatar, Card} from 'antd';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const {id} = router.query;\r\n    const {mainPosts, hasMorePost, loadPostsLoading} = useSelector((state) => state.post);\r\n    const {userInfo} = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        function onScroll(){\r\n            if(window.scrollY + document.documentElement.clientHeight \r\n                > document.documentElement.scrollHeight - 300){\r\n                    if(hasMorePost && !loadPostsLoading){\r\n                        dispatch({\r\n                            type: LOAD_USER_POSTS_REQUEST,\r\n                            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n                            data: id,\r\n                        });\r\n                    }\r\n                }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [hasMorePost, id, mainPosts.length, loadPostsLoading]);\r\n\r\n    return(\r\n        <AppLayout>\r\n            {userInfo && <Head>\r\n                <title>{userInfo.nickname}님의 글</title>\r\n                <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:image\" \r\n                content='https://nodebird.com/favicon.ico'/>\r\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            </Head>}\r\n            {userInfo \r\n            ? (\r\n                <Card actions={[\r\n                    <div key=\"twit\">짹짹 <br /> {userInfo.Posts}</div>,\r\n                    <div key=\"following\">팔로잉 <br /> {userInfo.Followings}</div>,\r\n                    <div key=\"follower\">팔로워 <br /> {userInfo.Followers}</div>,\r\n                ]}>\r\n                    <Card.Meta avatar={<Avatar>{userInfo.nickname[0]}</Avatar>} title={userInfo.nickname} />\r\n                </Card>\r\n            )\r\n            : null}\r\n            {mainPosts.map((c) => (\r\n                <PostCard key={c.id} post={c} />\r\n            ))}\r\n        </AppLayout>\r\n        \r\n    )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\cmder\\\\projects\\\\nodebird\\\\front\\\\pages\\\\hashtag\\\\[tag].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Head from 'next/head';\nimport { Avatar, Card } from 'antd';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Hashtag = function Hashtag() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, tag, mainPosts.length, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: \"https://nodebird.com/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: \"https://nodebird.com/post/\".concat(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), userInfo ? /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC9F9\\uC9F9 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 40\n        }, _this), \" \", userInfo.Posts]\n      }, \"twit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 46\n        }, _this), \" \", userInfo.Followings]\n      }, \"following\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 45\n        }, _this), \" \", userInfo.Followers]\n      }, \"follower\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: userInfo.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 40\n        }, _this),\n        title: userInfo.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, _this) : null, mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Hashtag, \"rGuTDxb/o1rbBVrvmEBwnqnaNrU=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = Hashtag;\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useRouter","useSelector","useDispatch","Head","Avatar","Card","AppLayout","PostCard","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePost","loadPostsLoading","user","userInfo","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","LOAD_USER_POSTS_REQUEST","lastId","length","id","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","c"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport {Avatar, Card} from 'antd';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\n\r\nconst Hashtag = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const {tag} = router.query;\r\n    const {mainPosts, hasMorePost, loadPostsLoading} = useSelector((state) => state.post);\r\n    const {userInfo} = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        function onScroll(){\r\n            if(window.scrollY + document.documentElement.clientHeight \r\n                > document.documentElement.scrollHeight - 300){\r\n                    if(hasMorePost && !loadPostsLoading){\r\n                        dispatch({\r\n                            type: LOAD_USER_POSTS_REQUEST,\r\n                            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n                            data: tag,\r\n                        });\r\n                    }\r\n                }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [hasMorePost, tag, mainPosts.length, loadPostsLoading]);\r\n\r\n    return(\r\n        <AppLayout>\r\n            <Head>\r\n                <title>{userInfo.nickname}님의 글</title>\r\n                <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:image\" \r\n                content='https://nodebird.com/favicon.ico'/>\r\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            </Head>\r\n            {userInfo \r\n            ? (\r\n                <Card actions={[\r\n                    <div key=\"twit\">짹짹 <br /> {userInfo.Posts}</div>,\r\n                    <div key=\"following\">팔로잉 <br /> {userInfo.Followings}</div>,\r\n                    <div key=\"follower\">팔로워 <br /> {userInfo.Followers}</div>,\r\n                ]}>\r\n                    <Card.Meta avatar={<Avatar>{userInfo.nickname[0]}</Avatar>} title={userInfo.nickname} />\r\n                </Card>\r\n            )\r\n            : null}\r\n            {mainPosts.map((c) => (\r\n                <PostCard key={c.id} post={c} />\r\n            ))}\r\n        </AppLayout>\r\n        \r\n    )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_HASHTAG_POSTS_REQUEST,\r\n        data: context.params.tag,\r\n    });\r\n\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}
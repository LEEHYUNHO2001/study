{"ast":null,"code":"import React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../components/AppLayout';\nimport useInput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport wrapper from '../store/configureStore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-1oeks01-0\"\n})([\"color:red;\"]);\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user); //접근제어(로그인하면 회원가입페이지 못들어감)\n\n  useEffect(() => {\n    //로그아웃하는 경우\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: check,\n    1: setCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeCheck = useCallback(e => {\n    setCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== check) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [email, password, check, term]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird\"\n      })\n    }), /*#__PURE__*/_jsxs(Form, {\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-email\",\n          type: \"email\",\n          value: email,\n          onChange: onChangeEmail,\n          required: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-nickname\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-nickname\",\n          value: nickname,\n          onChange: onChangeNickname,\n          required: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          required: true\n        })]\n      }), \"            \", /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-check\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-check\",\n          type: \"password\",\n          value: check,\n          onChange: onChangeCheck,\n          required: true\n        }), passwordError && /*#__PURE__*/_jsx(ErrorMessage, {\n          style: {\n            color: 'red'\n          },\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Checkbox, {\n          name: \"uesr-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"NodeBird \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n        }), termError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        })\n      })]\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/signup.js"],"names":["React","useCallback","useEffect","useState","Head","Form","Input","Checkbox","Button","styled","Router","END","axios","AppLayout","useInput","SIGN_UP_REQUEST","LOAD_MY_INFO_REQUEST","useDispatch","useSelector","wrapper","ErrorMessage","div","Signup","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","id","replace","alert","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","check","setCheck","passwordError","setPasswordError","term","setTerm","termError","setTermError","onChangeCheck","e","target","value","onChangeTerm","checked","onSubmit","console","log","type","data","color","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport Head from 'next/head';\r\nimport {Form, Input, Checkbox, Button} from 'antd';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport useInput from '../hooks/useInput';\r\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport wrapper from '../store/configureStore';\r\n\r\n\r\nconst ErrorMessage = styled.div`\r\n    color:red;\r\n`;\r\n\r\nconst Signup = () => {\r\n    const dispatch = useDispatch();\r\n    const {signUpLoading, signUpDone, signUpError, me} = useSelector((state) => state.user);\r\n\r\n    //접근제어(로그인하면 회원가입페이지 못들어감)\r\n    useEffect(() => {\r\n        //로그아웃하는 경우\r\n        if(me && me.id){\r\n            Router.replace('/');\r\n        }\r\n    },[me && me.id]);\r\n\r\n    useEffect(() => {\r\n        if(signUpDone){\r\n            Router.replace('/');\r\n        }\r\n    }, [signUpDone]);\r\n\r\n    useEffect(() => {\r\n        if(signUpError){\r\n            alert(signUpError);\r\n        }\r\n    }, [signUpError]);\r\n\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [nickname, onChangeNickname] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const [check, setCheck] = useState('');\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [term, setTerm] = useState('');\r\n    const [termError, setTermError] = useState(false);   \r\n\r\n    const onChangeCheck = useCallback((e) => {\r\n        setCheck(e.target.value);\r\n        setPasswordError(e.target.value !== password);\r\n    },[password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked);\r\n        setTermError(false);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        if(password !== check){\r\n            return setPasswordError(true);\r\n        }\r\n        if(!term){\r\n            return setTermError(true);\r\n        }\r\n        console.log(email, nickname, password);\r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: {email, password, nickname}\r\n        })\r\n    }, [email, password, check, term]);\r\n\r\n    return(\r\n        <AppLayout>\r\n        <Head>\r\n            <title>회원가입 | NodeBird</title>\r\n        </Head>\r\n        <Form onFinish={onSubmit}>\r\n            <div>\r\n                <label htmlFor=\"user-email\">이메일</label>\r\n                <br/>\r\n                <Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeEmail} required />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-nickname\">닉네임</label>\r\n                <br/>\r\n                <Input name=\"user-nickname\" value={nickname} onChange={onChangeNickname} required />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br/>\r\n                <Input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required />\r\n            </div>            <div>\r\n                <label htmlFor=\"user-check\">비밀번호체크</label>\r\n                <br/>\r\n                <Input name=\"user-check\" type=\"password\" value={check} onChange={onChangeCheck} required />\r\n                {passwordError && <ErrorMessage style={{color:'red'}}>비밀번호가 일치하지 않습니다.</ErrorMessage>}\r\n            </div>\r\n            <div>\r\n                <Checkbox name=\"uesr-term\" checked={term} onChange={onChangeTerm}>NodeBird 약관에 동의합니다.</Checkbox>\r\n                {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n            </div>\r\n            <div style={{marginTop:10}}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>가입하기</Button>\r\n            </div>\r\n        </Form>\r\n    </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user';\n\nfunction followAPI() {\n  return axios.post('/api/folow');\n}\n\nfunction* follow(action) {\n  try {\n    //서버를 구현하기 전까지 delay로 비동기적인 효과 주자.\n    yield delay(1000); //const result = yield call(followAPI);\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    //서버를 구현하기 전까지 delay로 비동기적인 효과 주자.\n    yield delay(1000); //const result = yield call(unfollowAPI);\n\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/sagas/user.js"],"names":["all","fork","call","put","takeLatest","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","followAPI","post","follow","action","type","data","err","error","response","unfollowAPI","unfollow","logInAPI","logIn","result","logOutAPI","logOut","signUpAPI","signUp","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import {all, fork, call, put, takeLatest, delay} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE\r\n} from '../reducers/user';\r\n\r\nfunction followAPI(){\r\n    return axios.post('/api/folow');\r\n}\r\n\r\nfunction* follow(action) {\r\n    try{\r\n        //서버를 구현하기 전까지 delay로 비동기적인 효과 주자.\r\n        yield delay(1000);\r\n        //const result = yield call(followAPI);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(){\r\n    return axios.post('/api/unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try{\r\n        //서버를 구현하기 전까지 delay로 비동기적인 효과 주자.\r\n        yield delay(1000);\r\n        //const result = yield call(unfollowAPI);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logInAPI(data){\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try{\r\n        const result = yield call(logInAPI, action.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data){\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        const result = yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchFollow(){\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow(){\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn(){\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut(){\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}
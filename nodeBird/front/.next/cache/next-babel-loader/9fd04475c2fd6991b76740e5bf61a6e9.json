{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\cmder\\\\projects\\\\nodebird\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Popover, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      retweetError = _useSelector.retweetError;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var id = me === null || me === void 0 ? void 0 : me.id; //me.id가 있으면 id가 생성됨\n\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onUnLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert('로그인하지 않고 게시글을 삭제할 수 없습니다.');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert('로그인하지 않고 리트윗할 수 없습니다.');\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 38\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, _this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 26\n      }, _this),\n      children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 36\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 57\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \" \\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"UIV4KcXp9zYrahRXIU9ZnrvzS0w=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/components/PostCard.js"],"names":["React","useCallback","useEffect","useState","PropTypes","Button","Card","Popover","Avatar","List","Comment","RetweetOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","useSelector","useDispatch","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","PostCard","post","dispatch","state","removePostLoading","retweetError","commentFormOpened","setCommentFormOpened","user","me","id","liked","Likers","find","v","onLike","alert","type","data","onUnLike","onToggleComment","prev","onRemovePost","onRetweet","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Card, Popover, Avatar, List, Comment} from 'antd';\r\nimport {RetweetOutlined, HeartOutlined, HeartTwoTone,\r\n    MessageOutlined, EllipsisOutlined} from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST,\r\n     UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\r\nimport FollowButton from './FollowButton';\r\n\r\nconst PostCard = ({post}) => {\r\n    const dispatch = useDispatch();\r\n    const {removePostLoading, retweetError} = useSelector((state) => state.post);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n    const {me} = useSelector((state) => state.user);\r\n    const id = me?.id;  //me.id가 있으면 id가 생성됨\r\n    const liked = post.Likers.find((v) => v.id === id);\r\n\r\n\r\n    const onLike = useCallback(() => {\r\n        if(!id){\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: LIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, []);\r\n    const onUnLike = useCallback(() => {\r\n        if(!id){\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, []);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n    const onRemovePost = useCallback(() => {\r\n        if(!id){\r\n            return alert('로그인하지 않고 게시글을 삭제할 수 없습니다.');\r\n        }\r\n        return dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, []);\r\n    const onRetweet = useCallback(() => {\r\n        if(!id){\r\n            return alert('로그인하지 않고 리트윗할 수 없습니다.');\r\n        }\r\n        return dispatch({\r\n            type: RETWEET_REQUEST,\r\n            data: post.id,\r\n        });\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <Card \r\n            cover={post.Images[0] && <PostImages images={post.Images} />}\r\n            actions={[\r\n                <RetweetOutlined key=\"retweet\" onClick={onRetweet}/>,\r\n                liked \r\n                    ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnLike} />\r\n                    :<HeartOutlined key=\"heart\" onClick={onLike} />,\r\n                <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                <Popover key=\"more\" content={(\r\n                    <Button.Group>\r\n                        {id && post.User.id === id ? (\r\n                        <>\r\n                            <Button>수정</Button>\r\n                            <Button type=\"danger\" onClick={onRemovePost} loading={removePostLoading}>\r\n                                삭제\r\n                            </Button>\r\n                        </>\r\n                        ) : <Button>신고</Button>}\r\n                    </Button.Group>\r\n                )}>\r\n                    <EllipsisOutlined />\r\n                </Popover>,\r\n            ]}\r\n            extra={id && <FollowButton post={post} />}\r\n            >\r\n                <Card.Meta avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname} description={<PostCardContent postData={post.content} />} />\r\n                <Button></Button>\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header ={`${post.Comments.length} 개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post:PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        Likers: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '이현호'\n    },\n    content: 'first comment #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://cloudfront-ap-northeast-1.images.arcpublishing.com/chosunbiz/XGP7CUGLG5HFNO3WB25C6D6VY4.jpg'\n    }, {\n      src: 'https://nodebird.com/favicon.ico'\n    }, {\n      src: 'https://cdn.cms-twdigitalassets.com/content/dam/blog-twitter/official/ko_kr/products/2019/topics/CB-14444_TopicsCOMMS_7_20191107.png.img.fullhd.medium.png'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'hoho'\n      },\n      content: '개정판?'\n    }, {\n      User: {\n        nickname: 'yyzz'\n      },\n      content: '사고싶다'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; //동적 action creater(액션을 그때그때 생성)\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        addPostDone: true,\n        addPostLoading: false\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentDone: true,\n        addCommentLoading: false\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","reducer","state","action","error"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n        id: 1,\r\n        User: {\r\n            id: 1,\r\n            nickname: '이현호'\r\n        },\r\n        content: 'first comment #해시태그 #익스프레스',\r\n        Images: [{\r\n            src:'https://cloudfront-ap-northeast-1.images.arcpublishing.com/chosunbiz/XGP7CUGLG5HFNO3WB25C6D6VY4.jpg',\r\n        }, {\r\n            src:'https://nodebird.com/favicon.ico'\r\n        }, {\r\n            src:'https://cdn.cms-twdigitalassets.com/content/dam/blog-twitter/official/ko_kr/products/2019/topics/CB-14444_TopicsCOMMS_7_20191107.png.img.fullhd.medium.png'\r\n        }],\r\n        Comments:[{\r\n            User: {\r\n                nickname: 'hoho',\r\n            },\r\n            content: '개정판?',\r\n        }, {\r\n            User: {\r\n                nickname: 'yyzz',\r\n            },\r\n            content: '사고싶다',\r\n        }]\r\n    }],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\n//동적 action creater(액션을 그때그때 생성)\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst dummyPost = {\r\n    id: 2,\r\n    content: '더미데이터',\r\n    User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone: false,\r\n                addPostError: null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                mainPosts:[dummyPost, ...state.mainPosts],\r\n                addPostDone: true,\r\n                addPostLoading: false,\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                ...state,\r\n                addPostLoading: false,\r\n                addPostError: action.error,\r\n            };\r\n        case ADD_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: true,\r\n                addCommentDone: false,\r\n                addCommentError: null,\r\n            };\r\n        case ADD_COMMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addCommentDone: true,\r\n                addCommentLoading: false,\r\n            };\r\n        case ADD_COMMENT_FAILURE:\r\n            return{\r\n                ...state,\r\n                addCommentLoading: false,\r\n                addCommentError: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
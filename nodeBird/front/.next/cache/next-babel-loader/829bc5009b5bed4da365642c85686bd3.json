{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\cmder\\\\projects\\\\nodebird\\\\front\\\\pages\\\\profile.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport AppLayout from '../components/AppLayout';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Profile = function Profile() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var fetcher = function fetcher(url) {\n    return axios.get(url, {\n      withCredentials: true\n    }).then(function (result) {\n      return result.data;\n    });\n  };\n\n  var _useSWR = useSWR(\"http://localhost:3000/user/followers\", fetcher),\n      followersData = _useSWR.data,\n      followerError = _useSWR.error;\n\n  var _useSWR2 = useSWR(\"http://localhost:3000/user/followings\", fetcher),\n      followingsData = _useSWR2.data,\n      followingError = _useSWR2.error; //접근제어(로그인 없이 프로필 못들어감)\n\n\n  useEffect(function () {\n    //로그아웃하는 경우\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\n  }\n\n  if (!me) {\n    return null;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789\",\n        data: followingsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC\",\n        data: followersData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"3aOHNzNZ/GYIPDLGeuuh3fVhuuI=\", true, function () {\n  return [useSelector, useSWR, useSWR];\n});\n\n_c = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/profile.js"],"names":["React","useEffect","Head","Router","useSelector","axios","useSWR","AppLayout","NicknameEditForm","FollowList","Profile","dispatch","useDispatch","state","user","me","fetcher","url","get","withCredentials","then","result","data","followersData","followerError","error","followingsData","followingError","id","push","console"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAClB,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;;AACA,qBAAaR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAxB;AAAA,MAAOC,EAAP,gBAAOA,EAAP;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,WAASZ,KAAK,CAACa,GAAN,CAAUD,GAAV,EAAe;AAACE,MAAAA,eAAe,EAAC;AAAjB,KAAf,EAAuCC,IAAvC,CAA4C,UAACC,MAAD;AAAA,aAAYA,MAAM,CAACC,IAAnB;AAAA,KAA5C,CAAT;AAAA,GAAhB;;AACA,gBAAkDhB,MAAM,yCAAyCU,OAAzC,CAAxD;AAAA,MAAYO,aAAZ,WAAOD,IAAP;AAAA,MAAiCE,aAAjC,WAA2BC,KAA3B;;AACA,iBAAoDnB,MAAM,0CAA0CU,OAA1C,CAA1D;AAAA,MAAYU,cAAZ,YAAOJ,IAAP;AAAA,MAAkCK,cAAlC,YAA4BF,KAA5B,CANkB,CAQlB;;;AACAxB,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,QAAG,EAAEc,EAAE,IAAIA,EAAE,CAACa,EAAX,CAAH,EAAkB;AACdzB,MAAAA,MAAM,CAAC0B,IAAP,CAAY,GAAZ;AACH;AACJ,GALQ,EAKP,CAACd,EAAE,IAAIA,EAAE,CAACa,EAAV,CALO,CAAT;;AAOA,MAAGJ,aAAa,IAAIG,cAApB,EAAmC;AAC/BG,IAAAA,OAAO,CAACL,KAAR,CAAcD,aAAa,IAAIG,cAA/B;AACA,WAAO,0BAAP;AACH;;AAED,MAAG,CAACZ,EAAJ,EAAO;AACH,WAAO,IAAP;AACH;;AAAA;AAED,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,QAAC,SAAD;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,oBAAnB;AAAyB,QAAA,IAAI,EAAEW;AAA/B;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,oBAAnB;AAAyB,QAAA,IAAI,EAAEH;AAA/B;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA,kBADJ;AAYH,CArCD;;GAAMb,O;UAEWN,W,EAGqCE,M,EACEA,M;;;KANlDI,O;;AAoDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport FollowList from '../components/FollowList';\r\nimport wrapper from '../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user'\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const {me} = useSelector((state) => state.user)\r\n\r\n    const fetcher = (url) => axios.get(url, {withCredentials:true}).then((result) => result.data);\r\n    const {data:followersData, error:followerError} = useSWR(`http://localhost:3000/user/followers`, fetcher);\r\n    const {data:followingsData, error:followingError} = useSWR(`http://localhost:3000/user/followings`, fetcher);\r\n\r\n    //접근제어(로그인 없이 프로필 못들어감)\r\n    useEffect(() => {\r\n        //로그아웃하는 경우\r\n        if(!(me && me.id)){\r\n            Router.push('/');\r\n        }\r\n    },[me && me.id]);\r\n\r\n    if(followerError || followingError){\r\n        console.error(followerError || followingError);\r\n        return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\r\n    }\r\n\r\n    if(!me){\r\n        return null;\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Head>\r\n                <title>내 프로필 | NodeBird</title>\r\n            </Head>\r\n            <AppLayout>\r\n                <NicknameEditForm />\r\n                <FollowList header=\"팔로잉\" data={followingsData} />\r\n                <FollowList header=\"팔로워\" data={followersData} />\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}
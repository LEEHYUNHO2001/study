{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\cmder\\\\projects\\\\nodebird\\\\front\\\\pages\\\\user\\\\[id].js\";\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Head from 'next/head';\nimport { Avatar, Card } from 'antd';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, id, mainPosts.length, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [userInfo && /*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: `${userInfo.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: \"https://nodebird.com/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 26\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC9F9\\uC9F9 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 40\n        }, this), \" \", userInfo.Posts]\n      }, \"twit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 46\n        }, this), \" \", userInfo.Followings]\n      }, \"following\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 45\n        }, this), \" \", userInfo.Followers]\n      }, \"follower\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: userInfo.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 40\n        }, this),\n        title: userInfo.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : null, mainPosts.map(c => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: c\n    }, c.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default User;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/user/[id].js"],"names":["React","useEffect","useRouter","END","axios","useSelector","useDispatch","Head","Avatar","Card","wrapper","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","AppLayout","PostCard","User","dispatch","router","id","query","mainPosts","hasMorePost","loadPostsLoading","state","post","userInfo","user","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport {Avatar, Card} from 'antd';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const {id} = router.query;\r\n    const {mainPosts, hasMorePost, loadPostsLoading} = useSelector((state) => state.post);\r\n    const {userInfo} = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        function onScroll(){\r\n            if(window.scrollY + document.documentElement.clientHeight \r\n                > document.documentElement.scrollHeight - 300){\r\n                    if(hasMorePost && !loadPostsLoading){\r\n                        dispatch({\r\n                            type: LOAD_USER_POSTS_REQUEST,\r\n                            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n                            data: id,\r\n                        });\r\n                    }\r\n                }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [hasMorePost, id, mainPosts.length, loadPostsLoading]);\r\n\r\n    return(\r\n        <AppLayout>\r\n            {userInfo && <Head>\r\n                <title>{userInfo.nickname}님의 글</title>\r\n                <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:image\" \r\n                content='https://nodebird.com/favicon.ico'/>\r\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            </Head>}\r\n            {userInfo \r\n            ? (\r\n                <Card actions={[\r\n                    <div key=\"twit\">짹짹 <br /> {userInfo.Posts}</div>,\r\n                    <div key=\"following\">팔로잉 <br /> {userInfo.Followings}</div>,\r\n                    <div key=\"follower\">팔로워 <br /> {userInfo.Followers}</div>,\r\n                ]}>\r\n                    <Card.Meta avatar={<Avatar>{userInfo.nickname[0]}</Avatar>} title={userInfo.nickname} />\r\n                </Card>\r\n            )\r\n            : null}\r\n            {mainPosts.map((c) => (\r\n                <PostCard key={c.id} post={c} />\r\n            ))}\r\n        </AppLayout>\r\n        \r\n    )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\cmder\\\\projects\\\\nodebird\\\\front\\\\pages\\\\profile.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport AppLayout from '../components/AppLayout';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport wrapper from '../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    0: followersLimit,\n    1: setFollowersLimit\n  } = useState(3);\n  const {\n    0: followingsLimit,\n    1: setFollowingsLimit\n  } = useState(3);\n\n  const fetcher = url => axios.get(url, {\n    withCredentials: true\n  }).then(result => result.data);\n\n  const {\n    data: followersData,\n    error: followerError\n  } = useSWR(`http://localhost:3065/user/followers?limit=${followersLimit}`, fetcher);\n  const {\n    data: followingsData,\n    error: followingError\n  } = useSWR(`http://localhost:3065/user/followings?limit=${followingsLimit}`, fetcher); //접근제어(로그인 없이 프로필 못들어감)\n\n  useEffect(() => {\n    //로그아웃하는 경우\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  const loadMoreFollowings = useCallback(() => {\n    setFollowingsLimit(prev => prev + 3);\n  }, []);\n  const loadMoreFollowers = useCallback(() => {\n    setFollowersLimit(prev => prev + 3);\n  }, []);\n\n  if (!me) {\n    return `내 정보 로딩중...`;\n  }\n\n  ;\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789\",\n        data: followingsData,\n        onClickMore: loadMoreFollowings,\n        loading: !followingsData && !followingError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC\",\n        data: followersData,\n        onClickMore: loadMoreFollowers,\n        loading: !followersData && !followerError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/profile.js"],"names":["React","useEffect","useState","useCallback","Head","Router","useSelector","END","axios","useSWR","AppLayout","NicknameEditForm","FollowList","wrapper","LOAD_MY_INFO_REQUEST","Profile","me","state","user","followersLimit","setFollowersLimit","followingsLimit","setFollowingsLimit","fetcher","url","get","withCredentials","then","result","data","followersData","error","followerError","followingsData","followingError","id","push","loadMoreFollowings","prev","loadMoreFollowers","console","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport FollowList from '../components/FollowList';\r\nimport wrapper from '../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user'\r\n\r\nconst Profile = () => {\r\n    const {me} = useSelector((state) => state.user)\r\n    const [followersLimit, setFollowersLimit] = useState(3);\r\n    const [followingsLimit, setFollowingsLimit] = useState(3);\r\n\r\n    const fetcher = (url) => axios.get(url, {withCredentials:true}).then((result) => result.data);\r\n    const {data:followersData, error:followerError} = useSWR(\r\n        `http://localhost:3065/user/followers?limit=${followersLimit}`, fetcher);\r\n    const {data:followingsData, error:followingError} = useSWR(\r\n        `http://localhost:3065/user/followings?limit=${followingsLimit}`, fetcher);\r\n\r\n    //접근제어(로그인 없이 프로필 못들어감)\r\n    useEffect(() => {\r\n        //로그아웃하는 경우\r\n        if(!(me && me.id)){\r\n            Router.push('/');\r\n        }\r\n    },[me && me.id]);\r\n\r\n    const loadMoreFollowings = useCallback(() => {\r\n        setFollowingsLimit((prev) => prev + 3);\r\n    }, []);\r\n    const loadMoreFollowers = useCallback(() => {\r\n        setFollowersLimit((prev) => prev + 3);\r\n    }, []);\r\n\r\n    if(!me){\r\n        return `내 정보 로딩중...`;\r\n    };\r\n\r\n    if(followerError || followingError){\r\n        console.error(followerError || followingError);\r\n        return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Head>\r\n                <title>내 프로필 | NodeBird</title>\r\n            </Head>\r\n            <AppLayout>\r\n                <NicknameEditForm />\r\n                <FollowList header=\"팔로잉\" data={followingsData} \r\n                onClickMore={loadMoreFollowings} loading={!followingsData && !followingError}/>\r\n                <FollowList header=\"팔로워\" data={followersData} \r\n                onClickMore={loadMoreFollowers} loading={!followersData && !followerError}/>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}
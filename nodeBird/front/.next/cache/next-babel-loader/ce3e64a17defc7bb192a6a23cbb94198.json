{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; //동적 action creater(액션을 그때그때 생성)\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostDone = true;\n          draft.likePostLoading = false;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostDone = true;\n          draft.unlikePostLoading = false;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        //기존 게시글에  concat으로 action.data 추가.\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.loadPostsDone = true;\n        draft.loadPostsLoading = false; //50개까지만 더 불러오기\n\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostDone = true;\n        draft.addPostLoading = false;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostDone = true;\n        draft.removePostLoading = false;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          //조건을 만족하는 게시글 index 찾기\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          }); //게시글에 새 댓글 넣어줌\n\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePost","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","post","find","v","id","PostId","Likers","push","UserId","error","filter","concat","length","unshift","Comments"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n    mainPosts: [],\r\n    imagePaths: [],\r\n    hasMorePost: true,\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n};\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\n//동적 action creater(액션을 그때그때 생성)\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) =>     produce(state, (draft) => {\r\n    switch(action.type){\r\n        case LIKE_POST_REQUEST:\r\n            draft.likePostLoading = true;\r\n            draft.likePostDone = false;\r\n            draft.likePostError = null;\r\n            break; \r\n        case LIKE_POST_SUCCESS: {\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers.push({id: action.data.UserId});\r\n            draft.likePostDone = true;\r\n            draft.likePostLoading = false;\r\n            break;\r\n        }\r\n        case LIKE_POST_FAILURE:\r\n            draft.likePostLoading = false;\r\n            draft.likePostError = action.error;\r\n            break;\r\n        \r\n        case UNLIKE_POST_REQUEST:\r\n            draft.unlikePostLoading = true;\r\n            draft.unlikePostDone = false;\r\n            draft.unlikePostError = null;\r\n            break; \r\n        case UNLIKE_POST_SUCCESS:{\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n            draft.unlikePostDone = true;\r\n            draft.unlikePostLoading = false;\r\n            break;\r\n        }\r\n        case UNLIKE_POST_FAILURE:\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostError = action.error;\r\n            break;\r\n\r\n        case LOAD_POSTS_REQUEST:\r\n            draft.loadPostsLoading = true;\r\n            draft.loadPostsDone = false;\r\n            draft.loadPostsError = null;\r\n            break; \r\n        case LOAD_POSTS_SUCCESS:\r\n            //기존 게시글에  concat으로 action.data 추가.\r\n            draft.mainPosts = action.data.concat(draft.mainPosts);\r\n            draft.loadPostsDone = true;\r\n            draft.loadPostsLoading = false;\r\n            //50개까지만 더 불러오기\r\n            draft.hasMorePost = draft.mainPosts.length < 50;\r\n            break;\r\n        case LOAD_POSTS_FAILURE:\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsError = action.error;\r\n            break;\r\n\r\n        case ADD_POST_REQUEST:\r\n            draft.addPostLoading = true;\r\n            draft.addPostDone = false;\r\n            draft.addPostError = null;\r\n            break;            \r\n        case ADD_POST_SUCCESS:\r\n            draft.mainPosts.unshift(action.data);\r\n            draft.addPostDone = true;\r\n            draft.addPostLoading = false;\r\n            break;\r\n        case ADD_POST_FAILURE:\r\n            draft.addPostLoading = false;\r\n            draft.addPostError = action.error;\r\n            break;\r\n\r\n        case REMOVE_POST_REQUEST:\r\n            draft.removePostLoading = true;\r\n            draft.removePostDone = false;\r\n            draft.removePostError = null;\r\n            break;\r\n        case REMOVE_POST_SUCCESS:\r\n            draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n            draft.removePostDone = true;\r\n            draft.removePostLoading = false;\r\n            break;\r\n        case REMOVE_POST_FAILURE:\r\n            draft.removePostLoading = false;\r\n            draft.removePostError = action.error;\r\n            break;\r\n\r\n        case ADD_COMMENT_REQUEST:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentDone = false;\r\n            draft.addCommentError = null;\r\n            break;\r\n        case ADD_COMMENT_SUCCESS:{  \r\n            //조건을 만족하는 게시글 index 찾기\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            //게시글에 새 댓글 넣어줌\r\n            post.Comments.unshift(action.data);\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentDone = true;\r\n            break;\r\n        }\r\n        case ADD_COMMENT_FAILURE:\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentError = action.error;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    };\r\n});\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Post = function Post() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost; // if(router.isFallback){\n  //     return <div>로딩중..</div>;\n  // }\n\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:url\",\n        content: \"https://nodebird.com/post/\".concat(id)\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n}; // export async function getStaticPaths(){\n//     return{\n//         paths:[\n//             {params:{id:'4'}},\n//         ],\n//         fallback: true,\n//     }\n// }\n\n\nexport var __N_SSP = true;\nexport default Post;","map":{"version":3,"sources":["C:/Users/user/cmder/projects/nodebird/front/pages/post/[id].js"],"names":["React","useRouter","useSelector","Head","AppLayout","PostCard","Post","router","id","query","state","post","singlePost","User","nickname","content","Images","src"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAKA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAOO,EAAP,GAAaD,MAAM,CAACE,KAApB,CAAOD,EAAP;;AACA,qBAAqBN,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAhC;AAAA,MAAOC,UAAP,gBAAOA,UAAP,CAHe,CAKf;AACA;AACA;;;AAEA,sBACI,MAAC,SAAD;AAAA,4BACI,MAAC,IAAD;AAAA,8BACI;AAAA,mBAAQA,UAAU,CAACC,IAAX,CAAgBC,QAAxB;AAAA,QADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,UAAU,CAACG;AAA7C,QAFJ,eAGI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAAjC,QAHJ,eAII;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAEF,UAAU,CAACG;AAApD,QAJJ,eAKI;AAAM,QAAA,QAAQ,EAAC,UAAf;AACA,QAAA,OAAO,EAAEH,UAAU,CAACI,MAAX,CAAkB,CAAlB,IAAuBJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAiD;AAD1D,QALJ,eAOI;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,sCAA+BT,EAA/B;AAA/B,QAPJ;AAAA,MADJ,eAUI,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEI;AAAhB,MAVJ;AAAA,IADJ;AAeH,CAxBD,C,CA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAsBA,eAAeN,IAAf","sourcesContent":["import React from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    const {id} = router.query;\r\n    const {singlePost} = useSelector((state) => state.post);\r\n\r\n    // if(router.isFallback){\r\n    //     return <div>로딩중..</div>;\r\n    // }\r\n\r\n    return(\r\n        <AppLayout>\r\n            <Head>\r\n                <title>{singlePost.User.nickname}님의 글</title>\r\n                <meta name=\"description\" content={singlePost.content} />\r\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={singlePost.content} />\r\n                <meta property=\"og:image\" \r\n                content={singlePost.Images[0] ? singlePost.Images[0].src :'https://nodebird.com/favicon.ico'} />\r\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            </Head>\r\n            <PostCard post={singlePost} />\r\n        </AppLayout>\r\n        \r\n    )\r\n}\r\n\r\n// export async function getStaticPaths(){\r\n//     return{\r\n//         paths:[\r\n//             {params:{id:'4'}},\r\n//         ],\r\n//         fallback: true,\r\n//     }\r\n// }\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if(context.req && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}